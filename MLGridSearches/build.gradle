plugins {
	id 'java'
	id 'eclipse-wtp'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
        	srcDir 'resources'
        	srcDir 'conf'
    	}
    }
    test {
   	java {
   		srcDir 'test'
   	}
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

dependencies {

	// dependencies for submission time
	compile 'com.google.guava:guava:18.0'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
	compile group: 'org.aeonbits.owner', name: 'owner-java8', version:'1.0.6'
	compile group: 'ai.libs.thirdparty', name: 'interruptible-weka', version: '0.1.2'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.45'
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	// https://mvnrepository.com/artifact/com.github.fommil.netlib/core
	compile group: 'com.github.fommil.netlib', name: 'core', version: '1.1.2'

	// dependencies for development time
	compile "ai.libs:jaicore-experiments"
 	compile "ai.libs:jaicore-basic"
 	compile "ai.libs:jaicore-logic"
 	compile "ai.libs:jaicore-search"
 	compile "ai.libs:jaicore-planning"
 	compile "ai.libs:jaicore-ml"
 	compile "ai.libs:hasco"
 	compile "ai.libs:mlplan"
 	
	runtime 'org.slf4j:slf4j-log4j12:1.7.25', 'log4j:log4j:1.2.17'
}

repositories {
	mavenLocal()
    mavenCentral()
    maven { url "https://nexus.cs.upb.de/repository/maven-releases/" }
    maven { url "https://jitpack.io" }
	maven {
        url "http://clojars.org/repo/"
    }
}

task evaluationFatJar(type: Jar) {
    manifest {
		attributes 'Main-Class': 'gridsearch.classifier.GridSearchExperimentRunner'
    }
    zip64 = true
    baseName = 'gridsearch'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}